generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int           @default(autoincrement()) @id
  name        String        @db.VarChar(100)
  className   String?        @db.VarChar(100)
  storeId     Int
  Store       Store         @relation(fields: [storeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Category_ibfk_1")
  SubCategory SubCategory[]

  @@index([storeId], map: "storeId")
}

model Menu {
  id         Int          @default(autoincrement()) @id
  name       String       @db.VarChar(100)
  info       String?      @db.VarChar(255)
  price      Int?         @default(0)
  photoURL   String?      @db.VarChar(255)
  MenuOption MenuOption[]
  MenuSearch MenuSearch[]
}

model MenuOption {
  id         Int          @default(autoincrement()) @id
  name       String       @db.VarChar(100)
  menuId     Int
  Menu       Menu         @relation(fields: [menuId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MenuOption_ibfk_1")
  OptionInfo OptionInfo[]

  @@index([menuId], map: "menuId")
}

model MenuSearch {
  id            Int         @default(autoincrement()) @id
  subCategoryId Int
  menuId        Int
  SubCategory   SubCategory @relation(fields: [subCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MenuSearch_ibfk_1")
  Menu          Menu        @relation(fields: [menuId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MenuSearch_ibfk_2")

  @@index([menuId], map: "menuId")
  @@index([subCategoryId], map: "subCategoryId")
}

model OptionInfo {
  id         Int        @default(autoincrement()) @id
  name       String     @db.VarChar(100)
  price      Int?       @default(0)
  photoURL   String?    @db.VarChar(255)
  optionId   Int
  MenuOption MenuOption @relation(fields: [optionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "OptionInfo_ibfk_1")

  @@index([optionId], map: "optionId")
}

model Store {
  id           Int        @default(autoincrement()) @id
  name         String     @db.VarChar(100)
  masterUserId Int
  Category     Category[]
  User         User       @relation(fields: [masterUserId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Store_ibfk_1")

  @@index([masterUserId], map: "masterUserId")
}

model SubCategory {
  id         Int          @default(autoincrement()) @id
  name       String       @db.VarChar(100)
  className  String?      @db.VarChar(100)
  categoryId Int
  MenuSearch MenuSearch[]
  Category   Category     @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "SubCategory_ibfk_1")

  @@index([categoryId], map: "categoryId")
}

model User {
  id          Int     @default(autoincrement()) @id
  name        String  @db.VarChar(50)
  email       String? @db.VarChar(100)
  password    String  @db.VarChar(100)
  position    String? @default("admin") @db.VarChar(100)
  phonenumber String? @db.VarChar(100)
  Store       Store[]
}
